{
  "version": 3,
  "sources": ["../src/popup/popup.js"],
  "sourcesContent": ["import './popup.css';\nlet logMessages = [];\n\nfunction addLog(message) {\n    logMessages.push(new Date().toLocaleTimeString() + ': ' + message);\n    if (logMessages.length > 50) logMessages.shift();\n    const logElement = document.getElementById('log');\n    if (logElement) {\n        logElement.textContent = logMessages.join('\\n');\n    }\n}\n\nfunction handleTrackingChoice(action, movieData) {\n    addLog(`Tracking choice: ${action} for movie: ${movieData ? movieData.title : 'N/A'}`);\n    hideWidget();\n}\n\nfunction showWidget(movieData) {\n    const widgetContainer = document.getElementById('movie-tracker-widget-container');\n    const widgetMovieTitleEl = document.getElementById('widgetMovieTitle');\n    \n    if (widgetContainer && widgetMovieTitleEl) {\n        if (movieData && movieData.title) {\n            widgetMovieTitleEl.textContent = `Movie Detected: ${movieData.title}`;\n        } else {\n            widgetMovieTitleEl.textContent = 'Movie Detected!';\n        }\n        \n        widgetContainer.style.display = 'block';\n        addLog('Showing movie detection widget.');\n    }\n}\n\nfunction hideWidget() {\n    const widgetContainer = document.getElementById('movie-tracker-widget-container');\n    if (widgetContainer) {\n        widgetContainer.style.display = 'none';\n        addLog('Hiding movie detection widget.');\n    }\n}\n\nfunction updateStatus(detected, movieData) {\n    const statusEl = document.getElementById('status');\n    const movieInfoEl = document.getElementById('movieInfo');\n    const movieTitleEl = document.getElementById('movieTitle');\n    const movieDetailsEl = document.getElementById('movieDetails');\n\n    if (!statusEl) return;\n\n    if (detected && movieData) {\n        statusEl.className = 'status detected';\n        statusEl.textContent = 'Movie detected!';\n        \n        if (movieTitleEl) {\n            movieTitleEl.textContent = movieData.title || 'Unknown Title';\n        }\n        \n        if (movieDetailsEl) {\n            movieDetailsEl.innerHTML = `\n                <strong>Service:</strong> ${movieData.serviceName || movieData.domain || 'Unknown'}<br>\n                <strong>Confidence:</strong> ${((movieData.confidence || 0) * 100).toFixed(0)}%<br>\n                <strong>Duration:</strong> ${formatDuration(movieData.duration)}<br>\n                <strong>Has Video:</strong> ${movieData.currentTime !== undefined ? 'Yes' : 'No'}\n            `;\n        }\n        \n        if (movieInfoEl) {\n            movieInfoEl.style.display = 'block';\n        }\n        \n        addLog(`Movie detected: ${movieData.title}`);\n        lastDetectedMovieData = movieData; \n        showWidget(movieData); \n    } else {\n        statusEl.className = 'status not-detected';\n        statusEl.textContent = 'No movie detected on this page';\n        \n        if (movieInfoEl) {\n            movieInfoEl.style.display = 'none';\n        }\n        \n        lastDetectedMovieData = null; \n        hideWidget();\n        addLog('No movie detected.');\n    }\n}\n\nfunction formatDuration(seconds) {\n    if (!seconds || isNaN(seconds) || seconds === 0) return 'N/A';\n    const h = Math.floor(seconds / 3600);\n    const m = Math.floor((seconds % 3600) / 60);\n    const s = Math.floor(seconds % 60);\n\n    const pad = (num) => num.toString().padStart(2, '0');\n\n    if (h > 0) {\n        return `${h}:${pad(m)}:${pad(s)}`;\n    }\n    return `${m}:${pad(s)}`;\n}\n\nlet lastDetectedMovieData = null;\n\nfunction testCurrentPage() {\n    addLog('Testing current page...');\n    \n    if (!chrome || !chrome.tabs || !chrome.scripting) {\n        addLog('Chrome APIs not available. Make sure this is running as a Chrome Extension popup.');\n        updateStatus(false, null);\n        return;\n    }\n    \n    try {\n        chrome.tabs.query({active: true, currentWindow: true}, (tabs) => {\n            if (chrome.runtime.lastError) {\n                addLog('Error querying tabs: ' + chrome.runtime.lastError.message);\n                updateStatus(false, null);\n                return;\n            }\n            \n            if (!tabs || tabs.length === 0) {\n                addLog('No active tab found.');\n                updateStatus(false, null);\n                return;\n            }\n            \n            // First, try to get current movie data\n            chrome.scripting.executeScript({\n                target: {tabId: tabs[0].id},\n                func: () => {\n                    // Check if movieDetector exists and is initialized\n                    if (window.movieDetector && window.movieDetector.instance) {\n                        const detector = window.movieDetector.instance;\n                        \n                        // Check if detector is ready\n                        if (!detector.isReady()) {\n                            return { error: 'Detector not ready yet' };\n                        }\n                        \n                        // Return current movie if available\n                        if (detector.currentMovie) {\n                            return { movie: detector.currentMovie, source: 'current' };\n                        }\n                        \n                        // If no current movie, try immediate detection\n                        try {\n                            const movieData = detector.detector.detectMovieContext(window.location.href, document);\n                            return { movie: movieData, source: 'detection' };\n                        } catch (error) {\n                            return { error: 'Detection failed: ' + error.message };\n                        }\n                    }\n                    \n                    return { error: 'MovieDetector not found or not initialized' };\n                }\n            }, async (results) => {\n                if (chrome.runtime.lastError) {\n                    addLog('Error executing script: ' + chrome.runtime.lastError.message);\n                    updateStatus(false, null);\n                    return;\n                }\n                \n                if (results && results[0]) {\n                    const result = results[0].result;\n                    \n                    if (result.error) {\n                        addLog('Detection error: ' + result.error);\n                        \n                        // If detector not ready, try again after a delay\n                        if (result.error.includes('not ready')) {\n                            setTimeout(() => testCurrentPage(), 1000);\n                            return;\n                        }\n                        \n                        updateStatus(false, null);\n                        return;\n                    }\n                    \n                    // Handle async detection result\n                    if (result.movie && typeof result.movie.then === 'function') {\n                        // It's a promise, we need to handle it differently\n                        addLog('Detection returned promise, trying alternative approach...');\n                        updateStatus(false, null);\n                        return;\n                    }\n                    \n                    const movieData = result.movie;\n                    lastDetectedMovieData = movieData;\n                    \n                    if (movieData && movieData.title) {\n                        addLog(`Movie found via ${result.source}: ${movieData.title}`);\n                        updateStatus(true, movieData);\n                    } else {\n                        addLog('No movie data returned');\n                        updateStatus(false, null);\n                    }\n                } else {\n                    addLog('No results returned from content script');\n                    updateStatus(false, null);\n                }\n            });\n        });\n    } catch (error) {\n        addLog('Exception during API call: ' + error.message);\n        updateStatus(false, null);\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    addLog('Popup DOM loaded.');\n\n    const testButton = document.getElementById('testButton');\n    if (testButton) {\n        testButton.addEventListener('click', testCurrentPage);\n    }\n\n    const widgetContainer = document.getElementById('movie-tracker-widget-container');\n    if (widgetContainer) {\n        widgetContainer.addEventListener('click', (event) => {\n            const target = event.target;\n            \n            if (target.classList.contains('widget-btn')) {\n                const action = target.dataset.action;\n                if (action && lastDetectedMovieData) {\n                    handleTrackingChoice(action, lastDetectedMovieData);\n                }\n            } else if (target.classList.contains('widget-close')) {\n                hideWidget();\n            }\n        });\n    } else {\n        addLog('Warning: Widget container not found.');\n    }\n\n    // Test the page when popup opens\n    setTimeout(testCurrentPage, 100); // Small delay to ensure content script is ready\n});"],
  "mappings": "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",
  "names": []
}
